name: Generate README PDF

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pandoc and xelatex
        run: |
          sudo apt-get update
          # Install pandoc and a minimal xelatex engine
          sudo apt-get install -y pandoc texlive-xetex curl

      - name: Prepare README and download images
        run: |
          set -euo pipefail
          REPO_OWNER="Phenikaa-team"
          REPO_NAME="DoroGearPHP"
          COMMIT="4c3e2d48c36f67699a3c493fa9daadba841959e2"
          RAW_BASE="https://raw.githubusercontent.com/${REPO_OWNER}/${REPO_NAME}/${COMMIT}"

          # Replace github blob URLs in README.md with raw URLs (if present)
          sed -i -E "s#https://github.com/([^/]+/[^/]+)/blob/([^/]+)/(public/images/[^)\" ]+)#https://raw.githubusercontent.com/\\1/\\2/\\3#g" README.md || true

          # Find public/images references and download them
          grep -oE 'public/images/[^)\" ]+' README.md | sed 's#^/##' | sort -u | while read -r img; do
            [ -z "$img" ] && continue
            IMG_URL="${RAW_BASE}/${img}"
            IMG_DIR="$(dirname "$img")"
            mkdir -p "$IMG_DIR"
            echo "Downloading image: $img"
            if ! curl -fsSL "$IMG_URL" -o "$img"; then
              echo "Warning: failed to download $IMG_URL â€” image will be missing in PDF"
            fi
          done

      - name: Generate PDF using pandoc (A4)
        run: |
          pandoc README.md \
            -o README.pdf \
            --from markdown+hard_line_breaks+yaml_metadata_block \
            --pdf-engine=xelatex \
            -V geometry:margin=1in \
            -V papersize:a4 \
            --metadata title="DoroGearPHP README"

      - name: Show generated file info
        run: |
          if [ -f README.pdf ]; then
            echo "README.pdf generated, size:"
            ls -lh README.pdf
          else
            echo "PDF not generated!"
            exit 1
          fi

      - name: Commit and push README.pdf back to branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.pdf || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Add README.pdf (generated by GitHub Actions)"
          git push origin HEAD:${{ github.ref_name }}
